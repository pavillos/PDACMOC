% README.Rd

\name{PDACMOC}

\title{PDACMolecularOmniClassifier}

\docType{package}

\description{
  This package classifies tumor samples according to several molecular classifiers available using different Machine Learning (ML) approaches.
  It classifies both tumor and stroma fractions. To classify stroma compartment, it first makes a virtual microdissection through the \pkg{ADVOCATE} package.
  
  Classifiers available for tumor fractions:
  \enumerate{
    \item Collisson et al., 2011.
    \item Moffitt et al., 2015.
    \item Bailey et al., 2016.
    \item Puleo et al., 2018.
    \item Chan-Seng-Yue et al., 2020.
    \item PDAConsensus (following the methodology of Kamoun et al., 2020).
  }  
  
  Classifiers available for stroma fractions:
  \enumerate{
    \item Moffitt et al., 2016.
    \item Maurer et al., 2019.
    \item PDAConsensus (following the methodology of Kamoun et al., 2020).
  }
}

\details{
  The package has been built for Linux (Ubuntu 22.04.3 LTS).
  
  It contains the following files:
  \itemize{
  
    \item inst:
      \itemize{
        \item examples: it contains a R script (`example.R`) with some examples.
        \item extdata: it contains the `Certificate.pdf`.
        \item gene_signatures: it contains a file with all the final genes included.
        \item graphs_and_tables: it contains two figures that appear in the Shiny app.
        \item logos: it contains some institutional logos.
        \item models: it contains ML models saved as pickle format.
        \item packages: it contains a compressed file (`ADVOCATE_0.1.0.tar.gz`) used to install ADVOCATE package.
        \item saved_workspaces: it contains the workspaces generated with the example script.
        \item training_data: it contains several files used by the classifiers.
      }
      
    \item man: it contains the R markdown files produced automatically by devtools::document() using roxygen2 comments.
    
    \item R: it contains the different functions of the package.
          
    \item DESCRIPTION: description file.
    
    \item LICENSE: license file.
    
    \item NAMESPACE: namespace file produced automatically by devtools::document() using roxygen2 comments.
    
    \item PDACMOC.Rproj: R project file.
    
    \item README.Rd: readme R markdown file.
    
    \item README.pdf: readme pdf file.
    
    \item .Rproj.user: directory generated by RStudio that stores user-specific configurations and session states.
    
    \item .Rbuildignore: file used by R to exclude especific files and directories from package building.
    
    \item .git: directory for Git control version.
    
    \item .gitattributes: file used to manage attributes for paths in the repository, such as configuration for Git LFS.
    
    \item .gitignore: file used by Git to exclude specific files and directories from tracking and version control.
  }
}

\section{Installation}{

  To install the \pkg{PDACMOC} package, we recommend to create a Miniconda environment following the next instructions.

  \preformatted{
  
    ## Download and uncompressed the distribution file
    wget https://github.com/pavillos/PDACMOC/releases/download/v.2.5.3/PDACMOC_2.5.3.tar.gz
    tar -xvzf PDACMOC_2.5.3.tar.gz
    
    ## Install Miniconda
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh
    rm Miniconda3-latest-Linux-x86_64.sh
    
    ## Close and open terminal
    
    ## Update conda
    conda update conda
    
    ## Create conda environment
    conda create -n PDACMOC

    ## Activate conda environment
    conda activate PDACMOC
    
    ## Add conda-forge and bioconda channels
    conda config --env --add channels conda-forge
    conda config --env --add channels bioconda
    
    ## Install Python
    conda install python=3.11.4
    
    ## Install Python modules
    pip3 install numpy pandas pickle-mixin scikit-learn==1.3.1 
    
    ## Install R
    conda install -c conda-forge r-base=4.4.0
    
    ## Install libuv, libcurl, and libxml2
    conda install -c conda-forge libuv
    conda install -c conda-forge libcurl
    conda install -c conda-forge libxml2
    
    ## Change PKG_CONFIG_PATH
    # change path to your miniconda3 environment
    export PKG_CONFIG_PATH="/home/pvilloslada/Software/miniconda3/envs/PDACMOC/lib/pkgconfig/:$PKG_CONFIG_PATH" 
    
    ## Open R
    R
    
    ## Install R packages
    options(repos = c(CRAN = 'https://cloud.r-project.org/'))

    install.packages(c('BiocManager', 'doMC', 'dplyr', 'DT', 'foreach',
                       'iterators', 'mclust', 'plyr', 'reticulate', 'scales', 
                       'shiny', 'shinydashboard', 'shinyjs', 'shinythemes'))
    BiocManager::install(c('AnnotationDbi', 'DESeq2', 'org.Hs.eg.db', 'sva'))
    
    ## Close R
    q()
                                
    ## Install ADVOCATE
    R CMD INSTALL ./PDACMOC/inst/packages/ADVOCATE_0.1.0.tar.gz

    ## Install PDACMOC
    R CMD INSTALL ./PDACMOC_2.5.1.tar.gz
    
    ## Open R
    R
    
    ## Check if PDACMOC can be loaded
    library(PDACMOC)
    
    ## Close R
    q()
    
  }
}

\section{Shiny app instructions}{
  You can access the Shiny app online at \url{https://pdacmoc.cnio.es/}.
  
  To run the program online:
  \enumerate{
    \item Connect to server.
    \item Upload a tsv file with genes in rows and samples in columns (max. 1GB).
    \item Select if you want to apply or not batch correction.
    \item Select the gene ID type.
    \item Select one or more tumor classifiers.
    \item Select if you want to include or not stroma classification.
    \item If you want to include stroma classification, select one or more stroma classifiers.
    \item Press 'Run classification' and wait about 15-20 minutes.
    \item If you want to upload another tsv file press 'Reset app'.
  }
  
  After the process you will find the following:
  \enumerate{
    \item Table of tumor/stroma proportions. 'E' stands for epithelium, 'S' stands for stroma, and 'O' stands for others. 'conf' refers to 95\% confidence intervals.
    \item Up to 6 tables of tumor classification.
    \item Up to 6 summary tables of tumor classification.
    \item Up to 3 tables of stroma classification.
    \item Up to 3 summary tables of stroma classification.
  }
}

\section{Keywords}{
  PDAC, consensus molecular classifier, transcriptomics, Machine Learning, translational medicine, personalized medicine.
}

\author{
  \strong{Pablo Villoslada-Blanco}
  
  Genetic & Molecular Epidemiology Group (GMEG)
  
  Spanish National Cancer Research Centre (CNIO)
  
  \strong{Lola Alonso}
  
  Genetic & Molecular Epidemiology Group (GMEG)
  
  Spanish National Cancer Research Centre (CNIO)
  
  \strong{Sergio Sabroso-Lasa}
  
  Genetic & Molecular Epidemiology Group (GMEG)
  
  Spanish National Cancer Research Centre (CNIO)
  
  \strong{Miguel Maquedano}
  
  Bioinformatics Unit
  
  Spanish National Cancer Research Centre (CNIO)
  
  \strong{Lidia Estudillo}
  
  Genetic & Molecular Epidemiology Group (GMEG)
  
  Spanish National Cancer Research Centre (CNIO)
  
  \strong{Francisco X Real}
  
  Epithelial Carcinogenesis Group
  
  Spanish National Cancer Research Centre (CNIO)
  
  \strong{Evangelina López de Maturana}
  
  Genetic & Molecular Epidemiology Group (GMEG)
  
  Spanish National Cancer Research Centre (CNIO)
  
  \strong{Núria Malats}
  
  Genetic & Molecular Epidemiology Group (GMEG)
  
  Spanish National Cancer Research Centre (CNIO)
  
}

\references{
  \enumerate{
    \item Collisson, E., Sadanandam, A., Olson, P. et al. Subtypes of pancreatic ductal adenocarcinoma and their differing responses to therapy. Nat Med 17, 500–503 (2011). \url{https://doi.org/10.1038/nm.2344}
    \item Moffitt, R., Marayati, R., Flate, E. et al. Virtual microdissection identifies distinct tumor- and stroma-specific subtypes of pancreatic ductal adenocarcinoma. Nat Genet 47, 1168–1178 (2015). \url{https://doi.org/10.1038/ng.3398}
    \item Rashid, N. U., Peng, X. L., Jin, C., Moffitt, R. A., Volmar, K. E., Belt, B. A., Panni, R. Z., Nywening, T. M., Herrera, S. G., Moore, K. J., Hennessey, S. G., Morrison, A. B., Kawalerski, R., Nayyar, A., Chang, A. E., Schmidt, B., Kim, H. J., Linehan, D. C., & Yeh, J. J. (2020). Purity Independent Subtyping of Tumors (PurIST), A Clinically Robust, Single-sample Classifier for Tumor Subtyping in Pancreatic Cancer. Clinical cancer research : an official journal of the American Association for Cancer Research, 26(1), 82–92. \url{https://doi.org/10.1158/1078-0432.CCR-19-1467}
    \item Bailey, P., Chang, D., Nones, K. et al. Genomic analyses identify molecular subtypes of pancreatic cancer. Nature 531, 47–52 (2016). \url{https://doi.org/10.1038/nature16965}
    \item Puleo, F., Nicolle, R., Blum, Y., Cros, J., Marisa, L., Demetter, P., Quertinmont, E., Svrcek, M., Elarouci, N., Iovanna, J., Franchimont, D., Verset, L., Galdon, M. G., Devière, J., de Reyniès, A., Laurent-Puig, P., Van Laethem, J. L., Bachet, J. B., & Maréchal, R. (2018). Stratification of Pancreatic Ductal Adenocarcinomas Based on Tumor and Microenvironment Features. Gastroenterology, 155(6), 1999–2013.e3. \url{https://doi.org/10.1053/j.gastro.2018.08.033}
    \item Chan-Seng-Yue, M., Kim, J.C., Wilson, G.W. et al. Transcription phenotypes of pancreatic cancer are driven by genomic events during tumor evolution. Nat Genet 52, 231–240 (2020). \url{https://doi.org/10.1038/s41588-019-0566-9}
    \item Maurer, C., Holmstrom, S. R., He, J., Laise, P., Su, T., Ahmed, A., Hibshoosh, H., Chabot, J. A., Oberstein, P. E., Sepulveda, A. R., Genkinger, J. M., Zhang, J., Iuga, A. C., Bansal, M., Califano, A., & Olive, K. P. (2019). Experimental microdissection enables functional harmonisation of pancreatic cancer subtypes. Gut, 68(6), 1034–1043. \url{https://doi.org/10.1136/gutjnl-2018-317706}
    \item Kamoun, A., de Reyniès, A., Allory, Y., Sjödahl, G., Robertson, A. G., Seiler, R., Hoadley, K. A., Groeneveld, C. S., Al-Ahmadie, H., Choi, W., Castro, M. A. A., Fontugne, J., Eriksson, P., Mo, Q., Kardos, J., Zlotta, A., Hartmann, A., Dinney, C. P., Bellmunt, J., Powles, T., … Bladder Cancer Molecular Taxonomy Group (2020). A Consensus Molecular Classification of Muscle-invasive Bladder Cancer. European urology, 77(4), 420–433. \url{https://doi.org/10.1016/j.eururo.2019.09.006}
  }
}

\examples{
  library(PDACMOC)

  file1 <- system.file('examples', 'example.R', package = 'PDACMOC')
  dir <- file.path(dirname(file1), '../saved_workspaces/example.RData')
  #load(dir)
  rm(file1)

  # change path to your miniconda3 environment
  reticulate::use_python("~/Software/miniconda3/envs/PDACMOC/bin/python3.11", required = TRUE)

  file2 <- system.file('training_data', 'all_datasets_corrected.csv', package = 'PDACMOC')

  samples <- read.csv(file2, row.names = 1, check.names = FALSE)
  rm(file2)

  new_samples <- PDACMOC:::import.and.normalize(samples, batch = FALSE, gene_id = 'EnsemblID')

  results_collisson <- PDACMOC:::collisson.classify(new_samples)

  results_moffitt <- PDACMOC:::moffitt.classify(new_samples)

  results_bailey <- PDACMOC:::bailey.classify(new_samples)

  results_puleo <- PDACMOC:::puleo.classify(new_samples)

  results_chan <- PDACMOC:::chan.classify(new_samples)

  results_consensus <- PDACMOC:::PDAConsensus.classify(new_samples)

  vm_result <- PDACMOC:::virtual.microdissect(new_samples)

  results_stroma_moffitt <- PDACMOC:::stroma.moffitt.classify(vm_result$vm_S)

  results_stroma_maurer <- PDACMOC:::stroma.maurer.classify(vm_result$vm_S)

  results_stroma_consensus <- PDACMOC:::stroma.PDAConsensus.classify(vm_result$vm_S)

  classification_tumor <- PDACMOC:::omni.classify(samples, batch = FALSE, gene_id = 'EnsemblID',
                                                  classifier = c('Collisson', 'Moffitt', 'Bailey',
                                                                 'Puleo', 'Chan-Seng-Yue', 'PDAConsensus'))

  classification_all <- PDACMOC:::omni.classify(samples, batch = FALSE, gene_id = 'EnsemblID',
                                                classifier = c('Collisson', 'Moffitt', 'Bailey',
                                                               'Puleo', 'Chan-Seng-Yue', 'PDAConsensus'),
                                                stroma = TRUE,
                                                stroma_classifier = c('Moffitt',
                                                                      'Maurer',
                                                                      'PDAConsensus'))
  
  # change path to your browser
  options(browser = '/usr/bin/firefox')
  shinyjs::useShinyjs()
  runPDACMOC()

  #save.image(dir)
}
